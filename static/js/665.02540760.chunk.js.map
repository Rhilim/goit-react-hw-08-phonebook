{"version":3,"file":"static/js/665.02540760.chunk.js","mappings":"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","sources":["components/Wrapper.jsx","components/PhoneBook/PhoneBook.styled.jsx","components/PhoneBook/PhoneBook.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  justify-content: space-around;\n  align-items: center;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n`;\n","import styled from '@emotion/styled';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledTitle = styled.h1`\n  margin-left: 10px;\n`;\nexport const StyledForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding: 10px;\n`;\n\nexport const StyledField = styled(Field)`\n  padding: 4px;\n  width: 250px;\n  height: 30px;\n  border-radius: 4px;\n  border: none;\n  background-color: #fff;\n  ::placeholder{\n    color: grey;\n    font-size: 1.2em;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 4px;\n  width: 120px;\n  background-color: #1e90ff;\n  color: aquamarine;\n  border: solid 1px aquamarine;\n  border-radius: 4px;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\n\nexport const StyledBtnReset = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 4px;\n  width: 120px;\n  background-color: #1e90ff;\n  color: aquamarine;\n  border: solid 1px aquamarine;\n  border-radius: 4px;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\n\nexport const StyledError = styled(ErrorMessage)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const Wrapper = styled.div`\n  display: flex;\n  gap: 18px;\n`;\n\nexport const StyledLabel = styled.label`\n  font-size: 1.2em;\n  font-weight: bold;\n`;\n","import React from 'react';\nimport { Formik } from 'formik';\nimport {\n  StyledBtnReset,\n  StyledButton,\n  StyledError,\n  StyledField,\n  StyledForm,\n  StyledLabel,\n  Wrapper,\n} from 'components/PhoneBook/PhoneBook.styled';\nimport { AiOutlineDelete, AiOutlinePlusCircle } from 'react-icons/ai';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/operations';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { deleteAllContactsUI, getContacts } from 'redux/contactSlice';\n\nexport const PhoneBook = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const handleReset = () => {\n    dispatch(deleteAllContactsUI());\n  };\n\n  const handleAddContact = newName => {\n    const findContact = contacts.find(\n      item => item.name.toLowerCase() === newName.name.toLowerCase()\n    );\n    if (findContact) {\n      return toast.error(`${newName.name} is already in the phonebook`, {\n        duration: 4000,\n        position: 'top-center',\n      });\n    } else {\n      dispatch(addContact({ ...newName }));\n    }\n  };\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          name: '',\n          phone: '',\n        }}\n        onSubmit={(values, actions) => {\n          handleAddContact(values);\n          actions.resetForm();\n        }}\n      >\n        {({ handleSubmit }) => (\n          <StyledForm onSubmit={handleSubmit}>\n            <StyledLabel> Name </StyledLabel>\n            <StyledField\n              id=\"firstName\"\n              placeholder=\"Jane Smith\"\n              type=\"text\"\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я\n              ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters,\n              apostrophe, dash and spaces. For example Adrian, Jacob Mercer,\n              Charles de Batz de Castelmore d'Artagnan\"\n              required\n            ></StyledField>\n            <StyledError name=\"name\" component=\"div\" />\n            <StyledLabel> Number </StyledLabel>\n            <StyledField\n              type=\"tel\"\n              name=\"phone\"\n              placeholder=\"123456789\"\n              pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            ></StyledField>\n\n            <Wrapper>\n              <StyledButton type=\"submit\">\n                <AiOutlinePlusCircle size={25} />\n                Add contact\n              </StyledButton>\n              <StyledBtnReset type=\"button\" onClick={handleReset}>\n                <AiOutlineDelete size={25} />\n                Delete all contacts\n              </StyledBtnReset>\n            </Wrapper>\n          </StyledForm>\n        )}\n      </Formik>\n      <Toaster />\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledList = styled.ul`\n  align-items: flex-end;\n  list-style: none;\n  padding: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const StyledListItem = styled.li`\n  display: flex;\n  gap: 15px;\n  align-items: center;\n`;\n\nexport const StyledDeleteBtn = styled.button`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 4px;\n  width: 50px;\n  background-color: #1e90ff;\n  color: aquamarine;\n  border: solid 1px aquamarine;\n  border-radius: 4px;\n  :hover {\n    box-shadow: rgba(0, 0, 0, 0.19) 0px 10px 20px,\n      rgba(0, 0, 0, 0.23) 0px 6px 6px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contactSlice';\nimport { deleteContact, fetchContacts } from 'redux/operations';\nimport { StyledDeleteBtn, StyledList, StyledListItem } from './Contacts.styled';\nimport { useEffect } from 'react';\nimport { getFilter } from 'redux/filterSlice';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n  const error = useSelector(state => state.contacts.error);\n  const filterSelector = useSelector(getFilter);\n\n  const handleDelete = async contactId => {\n    try {\n      deleteContact(contactId);\n      dispatch(deleteContact(contactId));\n    } catch (error) {\n      console.error('Error deleting contact:', error);\n    }\n  };\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filterSelector.toLowerCase())\n  );\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        dispatch(fetchContacts());\n      } catch (error) {\n        console.error('Error fetching contacts:', error);\n      }\n    };\n    fetchData();\n  }, [dispatch]);\n\n  return (\n    <>\n      {contacts > 0 ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>Error: {error}</div>\n      ) : (\n        <StyledList>\n          {filteredContacts.map(el => (\n            <StyledListItem key={el.id}>\n              {el.name}: {el.phone}\n              <StyledDeleteBtn onClick={() => dispatch(handleDelete(el.id))}>\n                delete\n              </StyledDeleteBtn>\n            </StyledListItem>\n          ))}\n        </StyledList>\n      )}\n    </>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const StyledFilterTitle = styled.h3`\n  margin-left: 10px;\n`;\n\nexport const StyledFilter = styled.input`\n  /* padding: 4px; */\n  width: 150px;\n  height: 20px;\n  border-radius: 4px;\n  /* border: none; */\n  /* background-color: skyblue; */\n  margin-left: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilter, updateFilter } from 'redux/filterSlice';\nimport { StyledFilter, StyledFilterTitle } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(getFilter);\n\n  const handleFilterChange = event => {\n    const { value } = event.target;\n    dispatch(updateFilter(value));\n  };\n\n  return (\n    <>\n      <StyledFilterTitle>Find contacts by name:</StyledFilterTitle>\n      <StyledFilter type=\"text\" value={filter} onChange={handleFilterChange} />\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Wrapper } from 'components/Wrapper';\nimport { StyledTitle } from 'components/PhoneBook/PhoneBook.styled';\nimport { PhoneBook } from 'components/PhoneBook/PhoneBook';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { fetchContacts } from 'redux/operations';\nimport { selectLoading } from 'redux/contactSlice';\nimport { Filter } from 'components/Filter/Filter';\n\nexport default function Tasks() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your Phonebook</title>\n      </Helmet>\n      <Wrapper>\n        <StyledTitle>Phonebook</StyledTitle>\n        <PhoneBook />\n        <div>{isLoading && 'Request in progress...'}</div>\n        <Filter />\n        <Contacts />\n      </Wrapper>\n    </>\n  );\n}\n"],"names":["Wrapper","styled","StyledTitle","StyledForm","Form","StyledField","Field","StyledButton","StyledBtnReset","StyledError","ErrorMessage","StyledLabel","PhoneBook","dispatch","useDispatch","contacts","useSelector","getContacts","handleReset","deleteAllContactsUI","initialValues","name","phone","onSubmit","values","actions","newName","find","item","toLowerCase","toast","duration","position","addContact","handleAddContact","resetForm","handleSubmit","id","placeholder","type","pattern","title","required","component","size","onClick","StyledList","StyledListItem","StyledDeleteBtn","Contacts","error","state","filterSelector","getFilter","handleDelete","contactId","deleteContact","console","filteredContacts","filter","contact","includes","useEffect","fetchData","fetchContacts","map","el","StyledFilterTitle","StyledFilter","Filter","value","onChange","event","target","updateFilter","Tasks","isLoading","selectLoading","Helmet"],"sourceRoot":""}